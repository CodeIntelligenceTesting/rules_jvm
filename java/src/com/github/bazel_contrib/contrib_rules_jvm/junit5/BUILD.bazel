load("@rules_java//java:defs.bzl", "java_binary", "java_library")
load("//java/private:artifact.bzl", "artifact")

java_library(
    name = "junit5",
    srcs = glob(
        ["*.java"],
        exclude = [
            "Java17SystemExitToggle.java",
            "SystemExitToggle.java",
        ],
    ),
    javacopts = [
        # Target Java 8, no matter which JDK we're on so that we
        # can be sure that `SecurityManager` is present, even if
        # someone rebuilds on a JDK that doesn't have it.
        "--release",
        "8",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":maven-deps-compile-only",
        ":system-exit-toggle",
    ],
)  # keep

# Do not build with --release 8 to work around https://bugs.openjdk.org/browse/JDK-8214165.
# Files in srcs must not reference SecurityManager as it will go away soon.
java_library(
    name = "system-exit-toggle",
    srcs = [
        "Java17SystemExitToggle.java",
        "SystemExitToggle.java",
    ],
)

# We want to be able to compile the test runner, but we don't want to
# expose any of its dependencies, since we expect whoever is running
# tests to add them themselves, and we don't want to pollute the classpath.
java_library(
    name = "maven-deps-compile-only",
    neverlink = True,
    exports = [
        artifact("org.junit.jupiter:junit-jupiter-engine"),
        artifact("org.junit.platform:junit-platform-commons"),
        artifact("org.junit.platform:junit-platform-engine"),
        artifact("org.junit.platform:junit-platform-launcher"),
        artifact("org.junit.platform:junit-platform-reporting"),
        artifact("org.opentest4j:opentest4j"),
    ],
)

java_binary(
    name = "JUnit5Runner",
    main_class = "com.github.bazel_contrib.contrib_rules_jvm.junit5.JUnit5Runner",
    visibility = ["//visibility:public"],
    runtime_deps = [
        ":junit5",
    ],
)
